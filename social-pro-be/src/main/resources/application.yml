server:
  port: ${SPRING_PORT}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  profiles:
    active: dev  # Kích hoạt profile dev
---
spring:
  config:
    activate:
      on-profile: dev
  security:
    user:
      name: ${SPRING_SECURITY_USER_NAME}
      password: ${SPRING_SECURITY_USER_PASSWORD}
    roles: ${SPRING_SECURITY_ROLES}
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_SECURITY_ROLES}
    password: ${SPRING_DATASOURCE_PASSWORD}
    hikari:
      pool-name: ${SPRING_DATASOURCE_HIKARI_POOL_NAME}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false
  jta:
    enabled: false
  logstash:
    host: ${SPRING_LOGSTASH_HOST}
    port: ${SPRING_LOGSTASH_PORT}
  #Quartz config
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    datasource:
      url: ${SPRING_QUARTZ_URL}
      username: ${SPRING_QUARTZ_USERNAME}
      password: ${SPRING_QUARTZ_PASS}
      driver-class-name: com.mysql.cj.jdbc.Driver
    properties:
      org:
        quartz:
          jobStore:
            isClustered: true
            dataSource: quartzDataSource
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            tablePrefix: QRTZ_
          instanceName: ${SPRING_QUARTZ_INSTANCE_NAME}
        threadPool:
          threadCount: ${SPRING_QUARTZ_THREAD_COUNT}

bcrypt:
  cost: ${BCRYPT_COST}

jwt:
  secret: ${JWT_SECRET}
  issuer: ${JWT_ISSUER}
  audience: ${JWT_AUDIENCE}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION}
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION}

cors:
  max-age: 3600
  allowed-origins: ${CORS_ALLOWED_ORIGINS}
  allowed-methods: ${CORS_ALLOWED_METHODS}

openapi:
  info:
    title:  ${OPENAPI_TITLE}
    version:  ${OPENAPI_VERSION}
    description: ${OPENAPI_DESCRIPTION}
    contact:
      name:  ${OPENAPI_CONTACT_NAME}
      email:  ${OPENAPI_CONTACT_EMAIL}
    license:
      name: Apache 2.0
      url: http://springdoc.org
  servers:
    - url:  ${OPENAPI_SERVERS_URL}
      description:  ${OPENAPI_SERVERS_DESCRIPTION}
    - url:  ${OPENAPI_SERVERS_URL}
      description:  ${OPENAPI_SERVERS_DESCRIPTION}

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINT_EXPOSURE_INCLUDE}
  endpoint:
    health:
      show-details: always # Hiển thị chi tiết trạng thái "health"
      probes:
        enabled: true
  health:
    elasticsearch:
      enabled: false
info:
  app:
    name: ${ACTUATOR_INFO_APP_NAME}
    description: ${ACTUATOR_INFO_APP_DESCRIPTION}
    version: ${ACTUATOR_INFO_APP_VERSION}

# Telegram

telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN}
  group:
    chatId: ${TELEGRAM_BOT_GROUP}
# Keydb
keydb:
  host: ${KEYDB_HOST}
  port: ${KEYDB_PORT}
  ssl: ${KEYDB_SSL}

# Otp
otp:
  expire_time: ${OTP_EXPIRE_TIME} # Minute
  length: ${OTP_LENGTH}

# Payment
payment:
  token: ${PAYMENT_TOKEN}
  expire_time: ${PAYMENT_EXPIRE_TIME}

# Flyway
flyway:
  url: ${SPRING_FLYWAY_URL}
  user: ${SPRING_FLYWAY_USER}
  password: ${SPRING_FLYWAY_PASSWORD}
  locations: ${SPRING_FLYWAY_LOCATION}
  baseline-on-migrate: true
  enabled: true