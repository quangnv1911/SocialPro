server:
  port: 8080
spring:
  application:
    name: back-end

  security:
    user:
      name: user
      password: 123456
  datasource:
    url: jdbc:postgresql://${POSTGRES_DB_SERVER_ADDRESS:localhost}:${POSTGRES_DB_SERVER_PORT:5432}/
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:example}
    hikari:
      pool-name: SpringBootBoilerplateHikariPool
  jpa:
    hibernate:
      ddl-auto: create
    open-in-view: false
  jta:
    enabled: false
#
#logging:
#  level:
#    org.springframework: INFO
#    com.farukgenc.boilerplate.springboot: INFO
#
jwt:
  secretKey: secret
  issuer: www.farukgenc.com
  expirationMinute: 10

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tags-sorter: alpha
    operations-sorter: method
    doc-expansion: none
    default-models-expand-depth: -1
  packages-to-scan: com.social_pro.backend.backend.controller
  paths-to-match:
    - /api/**

cors:
  max-age: 3600

openapi:
  info:
    title: "My API Documentation"
    version: 1.0
    description: "This is a sample API documentation for My Application"
    contact:
      name: "Nguyá»…n Vinh Quang"
      email: "quangnv1911@gmail.com"
    license:
      name: Apache 2.0
      url: http://springdoc.org
  servers:
    - url: "http://localhost:8080"
      description: "Local Development Server"
    - url: "https://api.example.com"
      description: "Production Server"

